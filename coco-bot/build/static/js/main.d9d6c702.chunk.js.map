{"version":3,"sources":["coco-chat-window/footer/ComponentStatus.jsx","coco-chat-window/footer/Reset.jsx","coco-chat-window/footer/FooterFailed.tsx","coco-chat-window/footer/FooterSucceeded.tsx","coco-chat-window/footer/MicButton.tsx","coco-chat-window/footer/FooterStateful.tsx","coco-chat-window/coco-bubbles/ShowJsonButton.tsx","coco-chat-window/coco-bubbles/CoCoBubble.tsx","coco-chat-window/ReplyDetailsDialog.tsx","utils/randomString.tsx","utils/chatComm.ts","coco-chat-window/hooks/useServerReply.ts","coco-chat-window/header/ToggleSwitch.tsx","coco-chat-window/header/CoCoHeader.tsx","coco-chat-window/CoCoChatWindow.tsx","utils/uuid.js","coco-chat-window/hooks/useVoiceNarrator.tsx","coco-chat-window/hooks/useVoiceRecorder.tsx","App.tsx","index.tsx"],"names":["ComponentStatus","children","style","fontSize","paddingTop","margin","Reset","paddingBottom","FooterFailed","p","onClick","onReset","backgroundColor","color","cursor","display","flexDirection","justifyContent","alignItems","FooterSucceeded","MicButton","useState","inputInvalid","setInputInvalid","disabled","setDisabled","isTouching","setIsToucing","useEffect","undefined","invalid","onTouchStart","event","onDown","preventDefault","stopPropagation","onTouchCancel","onUp","onTouchEnd","height","width","viewBox","d","FooterStateful","isFailed","setIsFailed","isSucceeded","setIsSucceeded","state","isVoice","isVoiceOn","setIsVoiceOn","autorun","actionButton","onVoiceDown","onVoiceConfirm","onChange","onSubmit","inputPlaceholder","ShowJsonButton","marginLeft","marginBottom","borderRadius","fill","CoCoBubble","entry","isUser","isLoading","bubbleExtraParams","isShowingJson","isShowingCodeButton","setIsShowingCodeButton","paramsOut","setParamsOut","params","filter","param","messageId","id","endElement","showDetails","map","key","padding","name","value","ReplyDetailsDialog","data","setData","Dialog","open","onClose","DialogTitle","DialogContent","src","enableClipboard","displayDataTypes","DialogActions","Button","randomString","length","result","characters","charactersLength","i","charAt","Math","floor","random","sessionId","sendMessage","componentIdOrUrl","message","inputParameters","newSessionId","a","headers","Headers","isUrl","startsWith","fetch","method","body","JSON","stringify","user_input","flatten_context","context","reduce","acc","cur","reply","json","console","error","request","humanIdOrUrl","inputParams","userInput","setServerReply","r","ToggleSwitch","isOn","checked","setChecked","paddingRight","onColor","onToggle","Typography","variant","paddingLeft","title","CoCoHeader","setTitle","isShowJsonOn","setIsShowJsonOn","CoCoChatWindow","componentId","setComponentId","setInputParams","componentName","setComponentName","botGreeting","setBotGreeting","content","setContent","lastInputValue","setLastInputValue","lastUnsubmittedInput","setLastUnsubmittedInput","setisFailed","setisSucceeded","lastBotMessage","setLastBotMessage","lastResultData","setLastResultData","replyDetails","setReplyDetails","useUserTyping","isBotDoneTyping","useBotTyping","serverReply","useServerReply","action_name","response","component_done","component_failed","updated_context","confidence","idontknow","raw_resp","lastEntry","lastContext","chatState","Object","keys","push","replace","c","crypto","getRandomValues","Uint8Array","toString","rawRepliesData","observable","find","rrd","setIsVoice","text","narrate","useVoiceNarrator","log","recorder","setRecorder","getRecorder","then","useCallback","start","stop","blob","speechToMessage","useVoiceRecorder","header","bubble","footer","App","theme","createMuiTheme","minWidth","target","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.d9d6c702.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst ComponentStatus = ({children}) => {\r\n    return (\r\n        <p\r\n            style={{\r\n                fontSize: \"12px\",\r\n                paddingTop: \"7px\",\r\n                margin: 0\r\n            }}>\r\n            {children}\r\n        </p>\r\n    );\r\n};\r\n\r\nexport default ComponentStatus;\r\n","import React from \"react\";\r\n\r\nconst Reset = ({children}) => {\r\n    return (\r\n        <p\r\n            style={{\r\n                fontSize: \"15px\",\r\n                paddingTop: \"5px\",\r\n                paddingBottom: \"7px\",\r\n                margin: 0\r\n            }}>\r\n            {children}\r\n        </p>\r\n    );\r\n};\r\n\r\nexport default Reset;\r\n","import React from \"react\";\r\nimport ComponentStatus from \"./ComponentStatus\";\r\nimport Reset from \"./Reset\";\r\n\r\nexport const FooterFailed = (p: {onReset: () => void}) => {\r\n    return (\r\n        <div\r\n            onClick={p.onReset}\r\n            style={{\r\n                backgroundColor: \"orange\",\r\n                color: \"white\",\r\n                cursor: \"pointer\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\"\r\n            }}>\r\n            <ComponentStatus>Subgoal not achieved</ComponentStatus>\r\n            <Reset>RESET</Reset>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport ComponentStatus from \"./ComponentStatus\";\r\nimport Reset from \"./Reset\";\r\n\r\nexport const FooterSucceeded = (p: {onReset: () => void}) => {\r\n    return (\r\n        <div\r\n            onClick={p.onReset}\r\n            style={{\r\n                backgroundColor: \"#00c853\",\r\n                color: \"white\",\r\n                cursor: \"pointer\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\"\r\n            }}>\r\n            <ComponentStatus>Subgoal achieved</ComponentStatus>\r\n            <Reset>RESET</Reset>\r\n        </div>\r\n    );\r\n};\r\n","import React, {useState, useEffect} from \"react\";\r\nimport {ActionButton} from \"@conversationalcomponents/chat-window\";\r\n\r\nexport const MicButton = (p: {onDown: () => void; onUp: () => void; disabled?: boolean; inputInvalid?: boolean}) => {\r\n    const [inputInvalid, setInputInvalid] = useState(!!p.inputInvalid);\r\n    const [disabled, setDisabled] = useState(!!p.disabled);\r\n    const [isTouching, setIsToucing] = useState(false);\r\n\r\n    useEffect(() => setDisabled(!!p.disabled), [p.disabled]);\r\n    useEffect(() => setInputInvalid(!!p.inputInvalid), [p.inputInvalid]);\r\n\r\n    const onTouchStart = (event: React.PointerEvent<HTMLButtonElement>) => {\r\n        setIsToucing(true);\r\n        p.onDown();\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    };\r\n\r\n    const onTouchCancel = (event: React.PointerEvent<HTMLButtonElement>) => {\r\n        setIsToucing(false);\r\n        isTouching && p.onUp();\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    };\r\n\r\n    const onTouchEnd = (event: React.PointerEvent<HTMLButtonElement>) => {\r\n        setIsToucing(false);\r\n        p.onUp();\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    };\r\n\r\n    return (\r\n        <ActionButton\r\n            {...{\r\n                color: isTouching ? \"#01a6e0\" : undefined,\r\n                disabled,\r\n                invalid: inputInvalid,\r\n                onTouchStart,\r\n                onTouchCancel,\r\n                onTouchEnd\r\n            }}>\r\n            <svg style={{height: \"24px\", width: \"24px\"}} viewBox=\"0 0 400 400\">\r\n                <g>\r\n                    <path d=\"M290.991,240.991c0,26.392-21.602,47.999-48.002,47.999h-11.529c-26.4,0-48.002-21.607-48.002-47.999V104.002   c0-26.4,21.602-48.004,48.002-48.004h11.529c26.4,0,48.002,21.604,48.002,48.004V240.991z\" />\r\n                    <path d=\"M342.381,209.85h-8.961c-4.932,0-8.961,4.034-8.961,8.961v8.008c0,50.26-37.109,91.001-87.361,91.001   c-50.26,0-87.109-40.741-87.109-91.001v-8.008c0-4.927-4.029-8.961-8.961-8.961h-8.961c-4.924,0-8.961,4.034-8.961,8.961v8.008   c0,58.862,40.229,107.625,96.07,116.362v36.966h-34.412c-4.932,0-8.961,4.039-8.961,8.971v17.922c0,4.923,4.029,8.961,8.961,8.961   h104.688c4.926,0,8.961-4.038,8.961-8.961v-17.922c0-4.932-4.035-8.971-8.961-8.971h-34.43v-36.966   c55.889-8.729,96.32-57.5,96.32-116.362v-8.008C351.342,213.884,347.303,209.85,342.381,209.85z\" />\r\n                </g>\r\n            </svg>\r\n        </ActionButton>\r\n    );\r\n};\r\n","import React, {useState, useEffect} from \"react\";\r\nimport {FooterFailed} from \"./FooterFailed\";\r\nimport {FooterSucceeded} from \"./FooterSucceeded\";\r\nimport {autorun} from \"mobx\";\r\nimport {MicButton} from \"./MicButton\";\r\nimport {FooterInput} from \"@conversationalcomponents/chat-window\";\r\n\r\nexport const FooterStateful = (p: {\r\n    isFailed?: boolean;\r\n    isSucceeded?: boolean;\r\n    onSubmit: (value: string) => void;\r\n    onReset: () => void;\r\n    onChange: (value: string) => void;\r\n    onVoiceDown: () => void;\r\n    onVoiceConfirm: () => void;\r\n    state: {\r\n        isShowingJson: boolean;\r\n        isVoice: boolean;\r\n    };\r\n    disabled: boolean;\r\n}) => {\r\n    const [isFailed, setIsFailed] = useState(p.isFailed);\r\n    const [disabled, setDisabled] = useState(p.disabled);\r\n    useEffect(() => {\r\n        setDisabled(p.disabled);\r\n    }, [p.disabled]);\r\n    const [isSucceeded, setIsSucceeded] = useState(p.isSucceeded);\r\n    useEffect(() => {\r\n        setIsFailed(p.isFailed);\r\n    }, [p.isFailed]);\r\n    useEffect(() => {\r\n        setIsSucceeded(p.isSucceeded);\r\n    }, [p.isSucceeded]);\r\n    const [isVoiceOn, setIsVoiceOn] = useState(p.state.isVoice);\r\n    useEffect(() => autorun(() => setIsVoiceOn(p.state.isVoice)), []);\r\n\r\n    if (isFailed) {\r\n        return <FooterFailed {...p} />;\r\n    } else if (isSucceeded) {\r\n        return <FooterSucceeded {...p} />;\r\n    } else {\r\n        return (\r\n            <FooterInput\r\n                actionButton={\r\n                    isVoiceOn ? <MicButton {...{onDown: p.onVoiceDown, onUp: p.onVoiceConfirm, disabled}} /> : undefined\r\n                }\r\n                onChange={p.onChange}\r\n                onSubmit={p.onSubmit}\r\n                inputPlaceholder=\"Type the message...\"\r\n                disabled={!!disabled}\r\n            />\r\n        );\r\n    }\r\n};\r\n","import React from \"react\";\r\n\r\nexport const ShowJsonButton = (p: {onClick: () => void}) => {\r\n    return (\r\n        <div\r\n            onClick={p.onClick}\r\n            style={{\r\n                display: \"flex\",\r\n                justifyContent: \"flex-end\",\r\n                flexDirection: \"column\",\r\n                marginLeft: \"6px\",\r\n                marginBottom: \"12px\"\r\n            }}>\r\n            <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    color: \"white\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    backgroundColor: \"#9c27b0\",\r\n                    borderRadius: \"50%\",\r\n                    cursor: \"pointer\",\r\n                    width: \"24px\",\r\n                    height: \"24px\"\r\n                }}>\r\n                <svg style={{width: \"17px\", height: \"17px\"}} viewBox=\"0 0 24 24\">\r\n                    <path\r\n                        fill=\"white\"\r\n                        d=\"M5,3H7V5H5V10A2,2 0 0,1 3,12A2,2 0 0,1 5,14V19H7V21H5C3.93,20.73 3,20.1 3,19V15A2,2 0 0,0 1,13H0V11H1A2,2 0 0,0 3,9V5A2,2 0 0,1 5,3M19,3A2,2 0 0,1 21,5V9A2,2 0 0,0 23,11H24V13H23A2,2 0 0,0 21,15V19A2,2 0 0,1 19,21H17V19H19V14A2,2 0 0,1 21,12A2,2 0 0,1 19,10V5H17V3H19M12,15A1,1 0 0,1 13,16A1,1 0 0,1 12,17A1,1 0 0,1 11,16A1,1 0 0,1 12,15M8,15A1,1 0 0,1 9,16A1,1 0 0,1 8,17A1,1 0 0,1 7,16A1,1 0 0,1 8,15M16,15A1,1 0 0,1 17,16A1,1 0 0,1 16,17A1,1 0 0,1 15,16A1,1 0 0,1 16,15Z\"\r\n                    />\r\n                </svg>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React, {useState, useEffect} from \"react\";\r\nimport {ShowJsonButton} from \"./ShowJsonButton\";\r\nimport {autorun} from \"mobx\";\r\nimport {BubbleParams} from \"../types\";\r\nimport {ChatBubbleParams} from \"@conversationalcomponents/chat-window/types\";\r\nimport {ChatBubble} from \"@conversationalcomponents/chat-window\";\r\n\r\nexport const CoCoBubble = (p: ChatBubbleParams) => {\r\n    const [isShowingCodeButton, setIsShowingCodeButton] = useState(\r\n        !p.entry.isUser && !p.entry.isLoading && p.bubbleExtraParams && p.bubbleExtraParams.isShowingJson\r\n    );\r\n    useEffect(\r\n        () =>\r\n            autorun(() =>\r\n                setIsShowingCodeButton(\r\n                    !p.entry.isUser && !p.entry.isLoading && p.bubbleExtraParams && p.bubbleExtraParams.isShowingJson\r\n                )\r\n            ),\r\n        []\r\n    );\r\n    const [paramsOut, setParamsOut] = useState<BubbleParams[]>([]);\r\n\r\n    useEffect(\r\n        () =>\r\n            autorun(() =>\r\n                setParamsOut(\r\n                    !p.entry.isUser && !p.entry.isLoading && p.bubbleExtraParams\r\n                        ? [\r\n                              ...p.bubbleExtraParams.params.filter(\r\n                                  (param: BubbleParams) => param.messageId === p.entry.id\r\n                              )\r\n                          ]\r\n                        : []\r\n                )\r\n            ),\r\n        []\r\n    );\r\n    return (\r\n        <>\r\n            <ChatBubble\r\n                {...{\r\n                    entry: p.entry,\r\n                    endElement: isShowingCodeButton ? (\r\n                        <ShowJsonButton\r\n                            onClick={() => {\r\n                                p.bubbleExtraParams &&\r\n                                    p.bubbleExtraParams.showDetails &&\r\n                                    p.bubbleExtraParams.showDetails(p.entry.id);\r\n                            }}\r\n                        />\r\n                    ) : (\r\n                        undefined\r\n                    )\r\n                }}\r\n            />\r\n            {paramsOut.map(param => (\r\n                <p key={param.id} style={{margin: \"0px\", marginLeft: \"52px\", padding: 0}}>\r\n                    <span style={{color: \"#9c27b0\"}}>{param.name}:</span>\r\n                    <span style={{color: \"#01A6E0\"}}>{param.value}</span>\r\n                </p>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {Dialog, DialogTitle, DialogContent, DialogActions, Button} from \"@material-ui/core\";\r\nimport ReactJson from \"react-json-view\";\r\n\r\nexport const ReplyDetailsDialog = (p: {data?: Object; onClose: () => void}) => {\r\n    const [data, setData] = useState(p.data);\r\n    useEffect(() => setData(p.data), [p.data]);\r\n\r\n    return (\r\n        <Dialog open={!!data} onClose={p.onClose}>\r\n            <DialogTitle>{\"Json response\"}</DialogTitle>\r\n            <DialogContent>\r\n                {data && <ReactJson src={data} name={false} enableClipboard={false} displayDataTypes={false} />}\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={p.onClose} color=\"secondary\">\r\n                    Close\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n","export function randomString(length: number) {\r\n    var result = \"\";\r\n    var characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz \";\r\n    var charactersLength = characters.length;\r\n    for (var i = 0; i < length; i++) {\r\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result;\r\n}\r\n","import {randomString} from \"./randomString\";\r\nimport {ComponentProperty} from \"../coco-chat-window/types\";\r\n\r\nconst apiKey = \"master_key\";\r\nconst url = \"https://marketplace.conversationalcomponents.com\";\r\n\r\nlet sessionId = randomString(8);\r\n\r\nexport const resetSession = () => {\r\n    sessionId = randomString(8);\r\n};\r\n\r\nexport const sendMessage = async (\r\n    componentIdOrUrl: string,\r\n    message: string,\r\n    inputParameters: ComponentProperty[],\r\n    newSessionId?: string\r\n) => {\r\n    const headers = new Headers({\"api-key\": apiKey});\r\n    if (newSessionId) {\r\n        sessionId = newSessionId;\r\n    }\r\n    try {\r\n        const isUrl = componentIdOrUrl.startsWith(\"http:\") || componentIdOrUrl.startsWith(\"https:\");\r\n        const reply = await fetch(\r\n            isUrl ? `${componentIdOrUrl}/${sessionId}` : url + `/api/exchange/${componentIdOrUrl}/${sessionId}`,\r\n            {\r\n                method: \"POST\",\r\n                headers,\r\n                body: JSON.stringify({\r\n                    user_input: message,\r\n                    flatten_context: true,\r\n                    context: inputParameters.reduce((acc, cur) => {\r\n                        // @ts-ignore\r\n                        acc[cur.name] = cur.value;\r\n                        return acc;\r\n                    }, {})\r\n                })\r\n            }\r\n        );\r\n        const json = await reply.json();\r\n        return json;\r\n    } catch (e) {\r\n        console.error(e);\r\n        return {error: e};\r\n    }\r\n};\r\n","import React, {useState, useEffect} from \"react\";\r\nimport {ComponentProperty, CocoResponse} from \"../types\";\r\nimport {sendMessage} from \"../../utils/chatComm\";\r\n\r\nconst request = async (\r\n    humanIdOrUrl: string,\r\n    inputParams: ComponentProperty[],\r\n    userInput: string,\r\n    setServerReply: (reply: CocoResponse) => void\r\n) => {\r\n    const r: CocoResponse = await sendMessage(\r\n        humanIdOrUrl,\r\n        userInput,\r\n        inputParams && inputParams.length > 0 ? inputParams : []\r\n    );\r\n    setServerReply(r);\r\n};\r\n\r\nexport const useServerReply = (\r\n    humanIdOrUrl: string,\r\n    inputParams: ComponentProperty[],\r\n    userInput: string\r\n): [CocoResponse | undefined, React.Dispatch<React.SetStateAction<CocoResponse | undefined>>] => {\r\n    const [serverReply, setServerReply] = useState<CocoResponse>();\r\n\r\n    useEffect(() => {\r\n        if (!userInput) {\r\n            setServerReply(undefined);\r\n            return;\r\n        }\r\n        request(humanIdOrUrl, inputParams, userInput, setServerReply);\r\n    }, [humanIdOrUrl, userInput]);\r\n\r\n    return [serverReply, setServerReply];\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Switch from \"react-switch\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nexport const ToggleSwitch = (p: {\r\n  isOn: boolean;\r\n  onToggle: () => void;\r\n  title: string;\r\n}) => {\r\n  const [checked, setChecked] = useState(p.isOn);\r\n  useEffect(() => setChecked(p.isOn), [p.isOn]);\r\n\r\n  return (\r\n    <div style={{ paddingRight: \"8px\", display: \"flex\" }}>\r\n      <Switch\r\n        height={18}\r\n        width={42}\r\n        onColor={\"#9c27b0\"}\r\n        onChange={p.onToggle}\r\n        checked={checked}\r\n      />\r\n      <Typography variant=\"caption\" style={{ paddingLeft: \"4px\" }}>\r\n        {p.title}\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { HeaderParams } from \"@conversationalcomponents/chat-window/types\";\r\nimport { Typography, FormControlLabel } from \"@material-ui/core\";\r\nimport { autorun } from \"mobx\";\r\nimport { PurpleSwitch } from \"./PurpleSwitch\";\r\nimport { ToggleSwitch } from \"./ToggleSwitch\";\r\n\r\nexport const CoCoHeader = (\r\n  p: HeaderParams & { state: { isShowingJson: boolean; isVoice: boolean } }\r\n) => {\r\n  const [title, setTitle] = useState(p.title);\r\n  useEffect(() => {\r\n    setTitle(p.title);\r\n  }, [p.title]);\r\n  const [isShowJsonOn, setIsShowJsonOn] = useState(p.state.isShowingJson);\r\n  useEffect(() => autorun(() => setIsShowJsonOn(p.state.isShowingJson)), []);\r\n  const [isVoiceOn, setIsVoiceOn] = useState(p.state.isVoice);\r\n  useEffect(() => autorun(() => setIsVoiceOn(p.state.isVoice)), []);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        alignItems: \"center\",\r\n        backgroundColor: \"#01a6e0\",\r\n        color: \"#fff\",\r\n        display: \"flex\",\r\n        fill: \"#fff\",\r\n        height: \"56px\",\r\n        justifyContent: \"space-between\",\r\n        padding: \"0 10px\"\r\n      }}\r\n    >\r\n      <Typography\r\n        style={{\r\n          margin: 0,\r\n          fontSize: \"17px\"\r\n        }}\r\n      >\r\n        {title}\r\n      </Typography>\r\n      <div style={{ display: \"flex\" }}>\r\n        <ToggleSwitch\r\n          onToggle={() => (p.state.isShowingJson = !p.state.isShowingJson)}\r\n          isOn={isShowJsonOn}\r\n          title=\"code\"\r\n        />\r\n        <ToggleSwitch\r\n          onToggle={() => (p.state.isVoice = !p.state.isVoice)}\r\n          isOn={isVoiceOn}\r\n          title=\"voice\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  ComponentProperty,\r\n  BubbleParams,\r\n  CocoResponse,\r\n  CoCoChatWindowParams\r\n} from \"./types\";\r\nimport { FooterStateful } from \"./footer/FooterStateful\";\r\nimport { observable, autorun } from \"mobx\";\r\nimport { CoCoBubble } from \"./coco-bubbles/CoCoBubble\";\r\nimport { HeaderControl } from \"./header/HeaderControls\";\r\nimport { uuid } from \"../utils/uuid\";\r\nimport { ReplyDetailsDialog } from \"./ReplyDetailsDialog\";\r\nimport { useServerReply } from \"./hooks/useServerReply\";\r\nimport { useVoiceRecorder } from \"./hooks/useVoiceRecorder\";\r\nimport { useVoiceNarrator } from \"./hooks/useVoiceNarrator\";\r\nimport { resetSession } from \"../utils/chatComm\";\r\nimport {\r\n  ChatWindow,\r\n  useUserTyping,\r\n  useBotTyping\r\n} from \"@conversationalcomponents/chat-window\";\r\nimport { ChatEntry } from \"@conversationalcomponents/chat-window/types\";\r\nimport { CoCoHeader } from \"./header/CoCoHeader\";\r\n\r\nexport const CoCoChatWindow = (p: CoCoChatWindowParams) => {\r\n  const [componentId, setComponentId] = useState(p.humanIdOrUrl);\r\n  useEffect(() => setComponentId(p.humanIdOrUrl), [p.humanIdOrUrl]);\r\n\r\n  const [inputParams, setInputParams] = useState(p.inputParameters || []);\r\n  useEffect(() => setInputParams(p.inputParameters || []), [p.inputParameters]);\r\n\r\n  const [componentName, setComponentName] = useState(p.name);\r\n  useEffect(() => setComponentName(p.name), [p.name]);\r\n\r\n  const [botGreeting, setBotGreeting] = useState(\r\n    p.botGreeting || \"Type anything to get started!\"\r\n  );\r\n  useEffect(() => {\r\n    setBotGreeting(p.botGreeting || \"Type anything to get started!\");\r\n  }, [p.botGreeting]);\r\n\r\n  const [content, setContent] = useState<ChatEntry[]>([]);\r\n  const [lastInputValue, setLastInputValue] = useState(\"\");\r\n  const [lastUnsubmittedInput, setLastUnsubmittedInput] = useState(\"\");\r\n  const [isFailed, setisFailed] = useState(false);\r\n  const [isSucceeded, setisSucceeded] = useState(false);\r\n  const [lastBotMessage, setLastBotMessage] = useState(\"\");\r\n  const [lastResultData, setLastResultData] = useState<any>({});\r\n  const [replyDetails, setReplyDetails] = useState<Object | undefined>(\r\n    undefined\r\n  );\r\n\r\n  useUserTyping(content, setContent, lastUnsubmittedInput, lastInputValue);\r\n\r\n  const isBotDoneTyping = useBotTyping(\r\n    content,\r\n    setContent,\r\n    lastInputValue || botGreeting\r\n  );\r\n\r\n  const [serverReply, setServerReply] = useServerReply(\r\n    componentId,\r\n    inputParams || [],\r\n    lastInputValue\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (botGreeting && isBotDoneTyping) {\r\n      setServerReply({\r\n        action_name: \"greeting\",\r\n        response: botGreeting,\r\n        component_done: false,\r\n        component_failed: false,\r\n        updated_context: {},\r\n        confidence: 1,\r\n        idontknow: false,\r\n        raw_resp: {}\r\n      });\r\n    }\r\n  }, [botGreeting, isBotDoneTyping]);\r\n\r\n  useEffect(() => {\r\n    if (isBotDoneTyping && serverReply) {\r\n      setBotGreeting(\"\");\r\n      setLastBotMessage(serverReply.response);\r\n      setisFailed(serverReply.component_failed);\r\n      setisSucceeded(serverReply.component_done);\r\n      setLastResultData({ ...serverReply });\r\n      setLastInputValue(\"\");\r\n      setServerReply(undefined);\r\n    }\r\n  }, [serverReply, isBotDoneTyping]);\r\n\r\n  useEffect(() => {\r\n    if (!lastBotMessage) return;\r\n    const lastEntry = content.length ? content[content.length - 1] : undefined;\r\n    if (!lastEntry || lastEntry.isUser || !lastEntry.isLoading) return;\r\n    lastEntry.isLoading = false;\r\n    lastEntry.message = lastBotMessage;\r\n    const lastContext = lastResultData.updated_context || {};\r\n    chatState.params = [\r\n      ...chatState.params,\r\n      ...Object.keys(lastContext).reduce((acc, cur) => {\r\n        acc.push({\r\n          name: cur,\r\n          value: lastContext[cur],\r\n          id: uuid(),\r\n          messageId: lastEntry.id\r\n        });\r\n        return acc;\r\n      }, [] as BubbleParams[])\r\n    ];\r\n    chatState.rawRepliesData.push({\r\n      messageId: lastEntry.id,\r\n      data: lastResultData\r\n    });\r\n  }, [lastBotMessage, content, lastResultData]);\r\n\r\n  const showDetails = (id: string) => {\r\n    const entry = chatState.rawRepliesData.find(rrd => rrd.messageId === id);\r\n    if (!entry) return;\r\n    setReplyDetails(entry.data);\r\n  };\r\n\r\n  const [chatState] = useState(\r\n    observable({\r\n      isShowingJson: true,\r\n      isVoice: false,\r\n      params: [] as BubbleParams[],\r\n      rawRepliesData: [] as { messageId: string; data: Object }[],\r\n      showDetails\r\n    })\r\n  );\r\n\r\n  const [isVoice, setIsVoice] = useState(chatState.isVoice);\r\n  useEffect(() => autorun(() => setIsVoice(chatState.isVoice)), []);\r\n\r\n  useVoiceNarrator(lastBotMessage, isVoice);\r\n\r\n  const onSubmit = (value: string) => {\r\n    console.log(`botGreeting is ${botGreeting}`);\r\n    setLastBotMessage(\"\");\r\n    setLastInputValue(value);\r\n    setLastUnsubmittedInput(\"\");\r\n  };\r\n\r\n  const onChange = (value: string) => {\r\n    setLastUnsubmittedInput(value);\r\n  };\r\n\r\n  const onReset = () => {\r\n    setContent([]);\r\n    resetSession();\r\n    setisFailed(false);\r\n    setisSucceeded(false);\r\n    setLastBotMessage(\"\");\r\n    setLastInputValue(\"\");\r\n    setLastUnsubmittedInput(\"\");\r\n    setBotGreeting(p.botGreeting || \"\");\r\n  };\r\n\r\n  const [onVoiceDown, onVoiceConfirm] = useVoiceRecorder(onChange, onSubmit);\r\n\r\n  return (\r\n    <>\r\n      <ChatWindow\r\n        {...{\r\n          title: componentName,\r\n          header: (\r\n            <CoCoHeader\r\n              {...{\r\n                title: componentName,\r\n                state: chatState\r\n              }}\r\n            />\r\n          ),\r\n          bubbleExtraParams: chatState,\r\n          bubble: CoCoBubble,\r\n          content,\r\n          footer: (\r\n            <FooterStateful\r\n              {...{\r\n                onVoiceDown,\r\n                onVoiceConfirm,\r\n                isFailed,\r\n                onChange,\r\n                isSucceeded,\r\n                onReset,\r\n                onSubmit,\r\n                state: chatState,\r\n                disabled: !isBotDoneTyping\r\n              }}\r\n            />\r\n          )\r\n        }}\r\n      />\r\n      <ReplyDetailsDialog\r\n        {...{ data: replyDetails, onClose: () => setReplyDetails(undefined) }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","export const uuid = () =>\r\n    ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>\r\n        (((c ^ crypto.getRandomValues(new Uint8Array(1))[0]) & 15) >> (c / 4)).toString(16)\r\n    );\r\n","import React, {useEffect} from \"react\";\r\nimport {autorun} from \"mobx\";\r\nimport {narrate} from \"coco-with-voice\";\r\n\r\nconst ttsUrl = \"https://voice-server-dot-coco-235210.appspot.com/tts\";\r\n\r\nexport const useVoiceNarrator = (text: string, isVoice: boolean) => {\r\n    useEffect(\r\n        () => () => {\r\n            text && isVoice && narrate(text, true, ttsUrl);\r\n        },\r\n        [text, isVoice]\r\n    );\r\n};\r\n","import React, {useState, useEffect, useCallback} from \"react\";\r\nimport {getRecorder, speechToMessage} from \"coco-with-voice\";\r\n\r\nconst sttUrl = \"https://voice-server-dot-coco-235210.appspot.com/stt\";\r\n\r\nexport const useVoiceRecorder = (onChange: (text: string) => void, onSubmit: (text: string) => void) => {\r\n    const [recorder, setRecorder] = useState<\r\n        | {\r\n              start: () => Promise<void>;\r\n              stop: () => Promise<Blob>;\r\n          }\r\n        | undefined\r\n    >();\r\n    useEffect(() => {\r\n        getRecorder().then(r => {\r\n            setRecorder(r);\r\n        });\r\n    }, []);\r\n\r\n    const onVoiceDown = useCallback(() => {\r\n        if (!recorder) return;\r\n        recorder.start();\r\n        onChange(\"voice value\");\r\n    }, [recorder]);\r\n\r\n    const onVoiceConfirm = useCallback(async () => {\r\n        if (!recorder) return;\r\n        const blob = await recorder.stop();\r\n        const reply = await speechToMessage(sttUrl, blob);\r\n        const json = await reply.json();\r\n        onSubmit(json.error || json.result);\r\n    }, [recorder]);\r\n\r\n    return [onVoiceDown, onVoiceConfirm];\r\n};\r\n","import React from \"react\";\r\nimport { CoCoChatWindow } from \"./coco-chat-window/CoCoChatWindow\";\r\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core\";\r\n\r\nexport const App = () => {\r\n  return (\r\n    <MuiThemeProvider theme={createMuiTheme()}>\r\n      <div style={{ width: \"250px\", height: \"500px\", display: \"flex\" }}>\r\n        <div\r\n          style={{\r\n            height: \"100%\",\r\n            minWidth: \"300px\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\"\r\n          }}\r\n        >\r\n          <CoCoChatWindow\r\n            name=\"COCO BOT\"\r\n            humanIdOrUrl=\"https://marketplace.conversationalcomponents.com/api/exchange/namer_vp3\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </MuiThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nconst target = document.getElementById(\"erw-root\");\r\nif (target) {\r\n  ReactDOM.render(<App />, target);\r\n}\r\n"],"sourceRoot":""}